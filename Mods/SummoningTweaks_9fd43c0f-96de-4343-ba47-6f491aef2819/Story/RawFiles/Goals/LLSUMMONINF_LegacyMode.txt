Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION
//REGION SUMMON_ADDED
PROC
LLSUMMONINF_OnSummonAdded((CHARACTERGUID)_Player, (CHARACTERGUID)_Summon)
AND
NOT HasActiveStatus(_Player, "LLSUMMONINF_MAX_SUMMONS_INC", 1)
THEN
SetStoryEvent(_Player, "LLSUMMONINF_IncreaseMaxSummons");
//END_REGION

IF
DialogStarted("LLSUMMONINF_SettingsMenu", (INTEGER)_Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
UserGetFlag(_Player, "LLSUMMONINF_IsHost", 1)
AND
GetVarInteger(_Player, "LLSUMMONINF_MaxSummonsCap", _Max)
THEN
DB_LLSUMMONINF_Temp_StartingMaxSummons(_Player, _Max);

IF
DialogEnded("LLSUMMONINF_SettingsMenu", (INTEGER)_Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
UserGetFlag(_Player, "LLSUMMONINF_IsHost", 1)
AND
DB_LLSUMMONINF_Temp_StartingMaxSummons(_Player, _Max)
AND
GetVarInteger(_Player, "LLSUMMONINF_MaxSummonsCap", _NewMax)
AND
_Max != _NewMax
AND
_NewMax >= 0
THEN
SetStoryEvent(_Player, "LLSUMMONINF_MaxSummons_UpdatePlayers");

IF
DialogEnded("LLSUMMONINF_SettingsMenu", (INTEGER)_Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
AND
DB_LLSUMMONINF_Temp_StartingMaxSummons(_Player, _Max)
THEN
NOT DB_LLSUMMONINF_Temp_StartingMaxSummons(_Player, _Max);
UserClearFlag(_Player, "LLSUMMONINF_IsHost", 0);

//REGION PARTY_EVENTS
IF
CharacterJoinedParty(_Player)
AND
CharacterIsSummon(_Player, 0)
AND
NOT HasActiveStatus(_Player, "LLSUMMONINF_MAX_SUMMONS_INC", 1)
AND
CharacterGetHostCharacter(_Host)
AND
GetVarInteger(_Host, "LLSUMMONINF_MaxSummonsCap", _Max)
AND
_Max > 1
THEN
SetStoryEvent(_Player, "LLSUMMONINF_IncreaseMaxSummons");

IF
CharacterLeftParty(_Player)
AND
CharacterIsSummon(_Player, 0)
AND
CharacterIsControlled(_Player, 0)
AND
HasActiveStatus(_Player, "LLSUMMONINF_MAX_SUMMONS_INC", 1)
THEN
RemoveStatus(_Player, "LLSUMMONINF_MAX_SUMMONS_INC");
//END_REGION

//REGION COMBAT_ACTIVE_FIX
IF
ObjectTurnStarted((CHARACTERGUID)_Summon)
AND
CharacterIsSummon(_Summon, 1)
AND
CharacterGetOwner(_Summon, _Owner)
AND
HasActiveStatus(_Owner, "LLSUMMONINF_MAX_SUMMONS_INC", 1)
THEN
DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner);
ProcObjectTimer(_Summon, "LLSUMMONINF_Timers_MakeActiveFix", 500);

IF
CharacterDied(_Summon)
AND
DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner)
THEN
NOT DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner);

IF
ObjectTurnEnded((CHARACTERGUID)_Summon)
AND
DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner)
THEN
NOT DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner);

IF
ObjectLeftCombat((CHARACTERGUID)_Summon, _)
AND
DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner)
THEN
NOT DB_LLSUMMONINF_Temp_ActiveTurnSummon(_Summon, _Owner);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Summon, "LLSUMMONINF_Timers_MakeActiveFix")
AND
CharacterIsControlled(_Summon, 0)
THEN
MakePlayerActive(_Summon);
//END_REGION

//REGION DEMON_CODEX
PROC
LLSUMMONINF_InitDemonCodexSettings()
THEN
SysClear("DB_LLSUMMONINF_IncarnateInfusion", 3);
DB_LLSUMMONINF_IncarnateInfusion("Target_RangedInfusion", "INF_RANGED", "INF_RANGED");
DB_LLSUMMONINF_IncarnateInfusion("Target_PowerInfusion", "INF_POWER", "INF_POWER");
DB_LLSUMMONINF_IncarnateInfusion("Target_ShadowInfusion", "INF_SHADOW", "INF_SHADOW");
DB_LLSUMMONINF_IncarnateInfusion("Target_WarpInfusion", "INF_WARP", "INF_WARP");
DB_LLSUMMONINF_IncarnateInfusion("Target_FireInfusion", "INF_FIRE", "INF_FIRE_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_IceInfusion", "INF_BLESSED_ICE", "INF_BLESSED_ICE_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_ElectricInfusion", "INF_ELECTRIC", "INF_ELECTRIC_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_PoisonInfusion", "INF_POISON", "INF_POISON_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_NecrofireInfusion", "INF_NECROFIRE", "INF_NECROFIRE_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_WaterInfusion", "INF_NECROFIRE", "INF_WATER_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_AcidInfusion", "INF_ACID", "INF_ACID_G");
DB_LLSUMMONINF_IncarnateInfusion("Target_CursedElectricInfusion", "INF_CURSED_ELECTRIC", "INF_CURSED_ELECTRIC_G");

SysClear("DB_LLSUMMONINF_LarianInfusion", 2);
//For cross-referencing with Larian's DB_CMP_SummoningImproved_Statuses database
DB_LLSUMMONINF_LarianInfusion("Target_RangedInfusion", "RangedInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_PowerInfusion", "PowerInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_ShadowInfusion", "ShadowInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_WarpInfusion", "WarpInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_FireInfusion", "FireInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_IceInfusion", "IceInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_ElectricInfusion", "ElectricInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_PoisonInfusion", "PoisonInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_NecrofireInfusion", "NecrofireInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_WaterInfusion", "WaterInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_AcidInfusion", "AcidInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_CursedElectricInfusion", "CursedElectricInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_OilInfusion", "OilInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_CursedOilInfusion", "CursedOilInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_BloodInfusion", "BloodInfusion");
DB_LLSUMMONINF_LarianInfusion("Target_CursedBloodInfusion", "CursedBloodInfusion");

QRY
LLSUMMONINF_QRY_HasStoredInfusions((CHARACTERGUID)_Summoner)
AND
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill)
THEN
DB_NOOP(1);

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill)
THEN
NOT DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill);
ObjectSetFlag(_Summoner, "LLSUMMONINF_HadCopiedInfusions");

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
ObjectGetFlag(_Summoner, "LLSUMMONINF_HadCopiedInfusions", 1)
THEN
ShowNotification(_Summoner, "LLSUMMONINF_Notification_InfusionsCleared");
ObjectClearFlag(_Summoner, "LLSUMMONINF_HadCopiedInfusions", 1);

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
NOT LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
IsTagged(_Incarnate, "INCARNATE_S", 1)
AND
DB_LLSUMMONINF_IncarnateInfusion(_Skill, _SmallStatus, _LargeStatus)
AND
HasActiveStatus(_Incarnate, _SmallStatus, 1)
AND
IsSkillActive(_Summoner, _Skill, 1)
THEN
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill);

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
NOT LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
IsTagged(_Incarnate, "INCARNATE_G", 1)
AND
DB_LLSUMMONINF_IncarnateInfusion(_Skill, _SmallStatus, _LargeStatus)
AND
HasActiveStatus(_Incarnate, _LargeStatus, 1)
AND
IsSkillActive(_Summoner, _Skill, 1)
THEN
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill);

//Larian Mod Version - They changed all the infusion statuses since they can be applied to any Shared summon
IF
CharacterStatusApplied(_Summon, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
GetTemplate(_Summon, _Template)
AND
DB_LLSUMMONINF_LarianInfusion(_Skill, _Infusion)
AND
IsSkillActive(_Summoner, _Skill, 1)
AND
DB_CMP_SummoningImproved_Statuses(_Template, _Infusion, (STRING)_Status)
AND
HasActiveStatus(_Summon, _Status, 1)
THEN
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill);

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
LLSUMMONINF_QRY_HasStoredInfusions(_Summoner)
THEN
ShowNotification(_Summoner, "LLSUMMONINF_Notification_InfusionsStored");

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_COPY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
NOT LLSUMMONINF_QRY_HasStoredInfusions(_Summoner)
AND
ObjectGetFlag(_Summoner, "LLSUMMONINF_HadCopiedInfusions", 0)
THEN
ShowNotification(_Summoner, "LLSUMMONINF_Notification_NoInfusionsStored");

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_APPLY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
NOT LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
IsTagged(_Incarnate, "INCARNATE_S", 1)
AND
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill)
AND
IsSkillActive(_Summoner, _Skill, 1)
AND
DB_LLSUMMONINF_IncarnateInfusion(_Skill, _SmallStatus, _LargeStatus)
AND
HasActiveStatus(_Incarnate, _SmallStatus, 0)
THEN
ApplyStatus(_Incarnate, _SmallStatus, -1.0, 0, _Summoner);

IF
CharacterStatusApplied(_Incarnate, "LLSUMMONINF_APPLY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
NOT LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
IsTagged(_Incarnate, "INCARNATE_G", 1)
AND
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill)
AND
IsSkillActive(_Summoner, _Skill, 1)
AND
DB_LLSUMMONINF_IncarnateInfusion(_Skill, _SmallStatus, _LargeStatus)
AND
HasActiveStatus(_Incarnate, _LargeStatus, 0)
THEN
ApplyStatus(_Incarnate, _LargeStatus, -1.0, 0, _Summoner);

IF
CharacterStatusApplied(_Summon, "LLSUMMONINF_APPLY_INFUSIONS", (CHARACTERGUID)_Summoner)
AND
LLSUMMONINF_QRY_LarianSummoningModIsEnabled()
AND
GetTemplate(_Summon, _Template)
AND
DB_LLSUMMONINF_DemonCodexInfusions(_Summoner, _Skill)
AND
IsSkillActive(_Summoner, _Skill, 1)
AND
DB_LLSUMMONINF_LarianInfusion(_Skill, _Infusion)
AND
DB_CMP_SummoningImproved_Statuses(_Template, _Infusion, (STRING)_Status)
AND
HasActiveStatus(_Summon, _Status, 0)
THEN
ApplyStatus(_Summon, _Status, -1.0, 0, _Summoner);
//END_REGION

//REGION START
IF
GameEventSet("GAMEEVENT_GameStarted")
THEN
DB_LLSUMMONINF_StoryStarted(1);

IF
SavegameLoaded(_,_,_,_)
AND
DB_StoryStarted(_)
THEN
DB_LLSUMMONINF_StoryStarted(1);

IF
DB_LLSUMMONINF_StoryStarted(1)
THEN
DebugBreak("[LaughingLeader_SummoningTweaks] Starting Summoning Tweaks.");
//END_REGION

//REGION VERSIONING
IF
DB_LLSUMMONINF_StoryStarted(1)
THEN
LLSUMMONINF_Updater_SetVersion("1.3.2.1");

IF
GameStarted(_,_)
AND
LLSUMMONINF_Updater_QRY_UpdateNeeded("1.3.2.1")
THEN
LLSUMMONINF_Updater_RemoveOldVersions("1.3.2.1");
LLSUMMONINF_Updater_SetVersion("1.3.2.1");

QRY
LLSUMMONINF_Updater_QRY_UpdateNeeded((STRING)_Version)
AND
NOT DB_Mods_Registered("SummoningTweaks", "LaughingLeader", _Version)
THEN
DB_NOOP(1);

PROC
LLSUMMONINF_Updater_RemoveOldVersions((STRING)_NewVersion)
AND
DB_Mods_Registered("SummoningTweaks", "LaughingLeader", _Version)
AND
_Version != _NewVersion
THEN
NOT DB_Mods_Registered("SummoningTweaks", "LaughingLeader", _Version);
LLSUMMONINF_Updater_VersionChanged(_Version, _NewVersion);

PROC
LLSUMMONINF_Updater_VersionChanged((STRING)_OldVersion, (STRING)_NewVersion)
AND
StringConcatenate("[SummoningTweaks:VersionChanged] Updating registered version [", _OldVersion, _Str)
AND
StringConcatenate(_Str, "] to [", _Str2)
AND
StringConcatenate(_Str2, _NewVersion, _Str3)
AND
StringConcatenate(_Str3, "]", _Str4)
THEN
DebugBreak(_Str4);

PROC
LLSUMMONINF_Updater_SetVersion((STRING)_Version)
AND
GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
DB_LeaderLib_ModApi_RegisterMod("SummoningTweaks", "LaughingLeader", _Version);

PROC
LLSUMMONINF_Updater_SetVersion((STRING)_Version)
AND
NOT GlobalGetFlag("LeaderLib_Initialized", 1)
THEN
DB_Mods_Registered("SummoningTweaks", "LaughingLeader", _Version);
//END_REGION

//REGION LEADERLIB_GLOBAL_SETTINGS
IF
GlobalFlagSet("LLSUMMONINF_SaveGlobalSettings")
THEN
LLSUMMONINF_SaveGlobalSettings();
GlobalClearFlag("LLSUMMONINF_SaveGlobalSettings");

PROC
LLSUMMONINF_SaveGlobalSettings()
AND
GlobalGetFlag("LeaderLib_Initialized", 1)
AND
GlobalGetFlag("LeaderLib_ExtenderIsActive", 1)
AND
CharacterGetHostCharacter(_Host)
THEN
/* Signals LeaderLib to write the global settings file. */
SetStoryEvent(_Host, "LeaderLib_Commands_SaveGlobalSettings");

/* Automatically called by LeaderLib for mod variable registration */
PROC
LeaderLib_Mods_OnModRegistered(9fd43c0f-96de-4343-ba47-6f491aef2819, (INTEGER)_Version, (INTEGER)_Major, (INTEGER)_Minor, (INTEGER)_Revision, (INTEGER)_Build)
THEN
DB_LeaderLib_ModApi_GlobalSettings_Register_GlobalFlag(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_DismissSkillAutoAddingDisabled", 1);
DB_LeaderLib_ModApi_GlobalSettings_Register_GlobalFlag(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_InvokeContractAutoAddDisabled", 1);
DB_LeaderLib_ModApi_GlobalSettings_Register_GlobalFlag(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_InstantSummonCooldownDisabled", 1);
DB_LeaderLib_ModApi_GlobalSettings_Register_GlobalInteger(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_MaxSummonsCap", 3);

/* Automatically called by LeaderLib when global settings attempts to get an integer variable. 
LeaderLib will save the variable value when DB_LeaderLib_ModApi_GlobalSettings_SaveGlobalIntegerVariable is added to.*/
PROC
LeaderLib_GlobalSettings_GetIntegerVariable(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_MaxSummonsCap")
AND
CharacterGetHostCharacter(_Host)
AND
GetVarInteger(_Host, "LLSUMMONINF_MaxSummonsCap", _Max)
THEN
DB_LeaderLib_ModApi_GlobalSettings_SaveGlobalIntegerVariable(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_MaxSummonsCap", _Max);

/* Automatically called by LeaderLib when the variable is loaded from global settings*/
PROC
LeaderLib_GlobalSettings_SetIntegerVariable(9fd43c0f-96de-4343-ba47-6f491aef2819, "LLSUMMONINF_MaxSummonsCap", (INTEGER)_Cap)
AND
IntegerMax(_Cap, 1, _ClampedA)
AND
IntegerMin(_Cap, 999, _ClampedB)
AND
CharacterGetHostCharacter(_Host)
AND
GetVarInteger(_Host, "LLSUMMONINF_MaxSummonsCap", _Current)
AND
_Current != _ClampedB
THEN
SetVarInteger(_Host, "LLSUMMONINF_MaxSummonsCap", _ClampedB);
SetStoryEvent(_Host, "LLSUMMONINF_SetMaxSummonsCapFromCharacter");
//END_REGION

//REGION DEBUG
IF
TextEventSet("llsummon_init")
AND
GetPosition(TRIGGERGUID_StartPoint_001_ab1e4726-a8e5-45a9-9dde-9816629646e3, _x, _y, _z)
AND
CharacterCreateAtPosition(_x, _y, _z, "Dwarves_Hero_Male_Beast_ca2b78c8-85f3-45f1-b8de-9e8363f1aa51", 0, _Host)
THEN
CharacterMakePlayer(_Host, NULL_00000000-0000-0000-0000-000000000000);
DB_IsPlayer(_Host);
//CharacterApplyPreset(_Host, "Conjurer_Act2");
CharacterAddAbility(_Host, "Summoning", 5);
CharacterAddAttribute(_Host, "Memory", 15);
CharacterAddSkill(_Host, "Summon_Incarnate");
CharacterAddSkill(_Host, "Summon_Cat");
CharacterAddSkill(_Host, "Summon_Condor");
CharacterAddSkill(_Host, "Summon_FireSlug");
CharacterAddSkill(_Host, "Summon_SoulWolf");
CharacterOverrideMaxSourcePoints(_Host, 10);
CharacterAddSourcePoints(_Host, 10);
ItemTemplateAddTo("BOOK_LLSUMMONINF_SettingsMenu_bc6991cb-cadc-42a6-a73a-3e9fd1cda02b", _Host, 1, 0);
ItemTemplateAddTo("Scroll_LLSUMMONINF_Skill_InvokeContract_9c6b4bf8-54df-434d-a4bf-ecad2ce4851c", _Host, 1, 0);
MakePlayerActive(_Host);

IF
TextEventSet("llsummon_setup")
AND
CharacterGetHostCharacter(_Host)
THEN
//CharacterApplyPreset(_Host, "Conjurer_Act2");
CharacterMakePlayer(_Host, NULL_00000000-0000-0000-0000-000000000000);
CharacterAddAbility(_Host, "Summoning", 5);
CharacterAddAttribute(_Host, "Memory", 15);
CharacterAddSkill(_Host, "Summon_Incarnate");
CharacterAddSkill(_Host, "Summon_Cat");
CharacterAddSkill(_Host, "Summon_Condor");
CharacterAddSkill(_Host, "Summon_FireSlug");
CharacterAddSkill(_Host, "Summon_SoulWolf");
CharacterOverrideMaxSourcePoints(_Host, 10);
CharacterAddSourcePoints(_Host, 10);
ItemTemplateAddTo("BOOK_LLSUMMONINF_SettingsMenu_bc6991cb-cadc-42a6-a73a-3e9fd1cda02b", _Host, 1, 0);
ItemTemplateAddTo("Scroll_LLSUMMONINF_Skill_InvokeContract_9c6b4bf8-54df-434d-a4bf-ecad2ce4851c", _Host, 1, 0);
MakePlayerActive(_Host);

IF
GameStarted("_TMPL_Sandbox", 1)
AND
NOT GlobalGetFlag("LLSUMMONINF_Initialized", 1)
THEN
TimerCancel("LLSUMMONINF_Timers_InitPartyLeader");
TimerLaunch("LLSUMMONINF_Timers_InitPartyLeader", 500);
TimerCancel("LLSUMMONINF_Timers_FixAiControl");
TimerLaunch("LLSUMMONINF_Timers_FixAiControl", 250);
//END_REGION

//REGION COOLDOWN
IF
SkillCast(_Player, _Skill, "summon", _)
AND
DB_IsPlayer(_Player)
AND
GlobalGetFlag("LLSUMMONINF_InstantSummonCooldownDisabled", 0)
AND
CharacterIsInCombat(_Player, 0)
THEN
CharacterResetCooldowns(_Player);
//END_REGION

EXITSECTION
ENDEXITSECTION
ParentTargetEdge "LaughingLeader_SummoningTweaks"